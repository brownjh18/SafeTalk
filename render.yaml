services:
  - type: web
    name: safetalk-app
    runtime: docker
    dockerfilePath: ./Dockerfile
    dockerContext: .
    envVars:
    # Note: Dockerfile performs build steps (multi-stage). We avoid running
    # a separate buildCommand on Render to prevent redundant builds. The
    # Dockerfile will install PHP deps and copy frontend assets built by the
    # Node stage into the runtime image.
    # buildCommand intentionally omitted.
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_KEY
        generateValue: true
      - key: APP_DEBUG
        value: false
      - key: APP_URL
        fromService:
          type: web
          name: safetalk-app
          property: host
      - key: ASSET_URL
        fromService:
          type: web
          name: safetalk-app
          property: host
      - key: VITE_APP_URL
        fromService:
          type: web
          name: safetalk-app
          property: host
      - key: RUN_MIGRATIONS
        value: "true"
      - key: FORCE_HTTPS
        value: true
      - key: DB_CONNECTION
        value: sqlite
      # Recommended broadcasting and pusher env vars (set these if you use Pusher or laravel-websockets)
      - key: BROADCAST_DRIVER
        value: log # change to 'pusher' in production if using Pusher
      - key: PUSHER_APP_ID
        value: ""
      - key: PUSHER_APP_KEY
        value: ""
      - key: PUSHER_APP_SECRET
        value: ""
      - key: PUSHER_APP_CLUSTER
        value: ""
      - key: VITE_PUSHER_APP_KEY
        value: ""
      - key: VITE_PUSHER_APP_CLUSTER
        value: ""
      - key: VITE_PUSHER_HOST
        value: ""
      - key: VITE_PUSHER_PORT
        value: ""
      - key: VITE_PUSHER_FORCE_TLS
        value: "true"

# Optional: If you prefer a managed Postgres DB on Render, add a database
# service and replace the SQLite settings with the following (Render will
# populate the referenced values when linked):
      - key: CACHE_STORE
        value: file
      - key: QUEUE_CONNECTION
        value: database
      - key: SESSION_DRIVER
        value: file
      - key: LOG_CHANNEL
        value: single
      - key: BROADCAST_CONNECTION
        value: log
      - key: FILESYSTEM_DISK
        value: local
      - key: MAIL_MAILER
        value: smtp
      - key: MAIL_HOST
        value: smtp.mailtrap.io
      - key: MAIL_PORT
        value: 2525
      - key: MAIL_USERNAME
        value: placeholder_username
      - key: MAIL_PASSWORD
        value: placeholder_password
      - key: MAIL_ENCRYPTION
        value: tls
      - key: STRIPE_SECRET
        value: sk_test_placeholder
      - key: STRIPE_PUBLISHABLE_KEY
        value: pk_test_placeholder

# Optional: run a background worker to process queue jobs (required if you queue broadcasts)
# Uncomment and configure the following service to run queue workers on Render.
# - type: worker
#   name: safetalk-worker
#   runtime: docker
#   dockerfilePath: ./Dockerfile
#   dockerContext: .
#   startCommand: php artisan queue:work --sleep=3 --tries=3
#   envVars:
#     - key: APP_ENV
#       value: production
#     - key: APP_KEY
#       fromService:
#         type: web
#         name: safetalk-app
#         property: env.APP_KEY